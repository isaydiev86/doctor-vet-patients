definitions:
  github_com_isaydiev86_doctor-vet-patients_transport_models.Patient:
    properties:
      address:
        description: Адрес проживания, обязательно
        type: string
      age:
        description: Возраст животного в годах, >= 0
        minimum: 0
        type: number
      animal:
        description: Животное, обязательно
        type: string
      breed:
        description: Порода животного, обязательно
        type: string
      fio:
        description: ФИО пациента, обязательно
        type: string
      gender:
        description: Пол животного, "мужской" или "женский"
        enum:
        - мужской
        - женский
        type: string
      id:
        type: integer
      isNeutered:
        description: Информация о стерилизации
        type: boolean
      name:
        description: Имя животного, обязательно
        type: string
      phone:
        description: Телефон обязательно
        type: string
    required:
    - address
    - animal
    - breed
    - fio
    - gender
    - name
    - phone
    type: object
  github_com_isaydiev86_doctor-vet-patients_transport_models.Preparations:
    properties:
      category:
        type: string
      course:
        type: string
      dose:
        type: number
      id:
        type: integer
      name:
        type: string
      option:
        type: string
    required:
    - category
    - course
    - dose
    - id
    - name
    - option
    type: object
  github_com_isaydiev86_doctor-vet-patients_transport_models.PreparationsToSymptoms:
    properties:
      category:
        type: string
      course:
        type: string
      dose:
        type: number
      id:
        type: integer
      name:
        type: string
      option:
        type: string
      similar:
        items:
          $ref: '#/definitions/models.NameResponse'
        type: array
    required:
    - category
    - course
    - dose
    - id
    - name
    - option
    - similar
    type: object
  github_com_isaydiev86_doctor-vet-patients_transport_models.Prescription:
    properties:
      category:
        type: string
      course:
        type: string
      createdAt:
        type: string
      dose:
        type: number
      id:
        type: integer
      name:
        type: string
      option:
        type: string
      treatmentId:
        type: integer
      updatedAt:
        type: string
    required:
    - course
    - createdAt
    - dose
    - id
    - name
    - treatmentId
    - updatedAt
    type: object
  github_com_isaydiev86_doctor-vet-patients_transport_models.Symptoms:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  github_com_isaydiev86_doctor-vet-patients_transport_models.Treatment:
    properties:
      beginAt:
        type: string
      comment:
        type: string
      createdAt:
        type: string
      doctorId:
        type: string
      endAt:
        type: string
      id:
        type: integer
      isActive:
        type: integer
      patient:
        allOf:
        - $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.Patient'
        description: инфа пациента
      patientId:
        type: integer
      status:
        type: string
      temperature:
        description: Температура тела животного, >= 0
        minimum: 0
        type: number
      updatedAt:
        type: string
      weight:
        description: Вес животного в кг, >= 0
        minimum: 0
        type: number
    required:
    - beginAt
    - comment
    - createdAt
    - doctorId
    - endAt
    - id
    - isActive
    - patientId
    - status
    - updatedAt
    type: object
  github_com_isaydiev86_doctor-vet-patients_transport_models.User:
    properties:
      fio:
        type: string
      id:
        type: integer
      role:
        type: string
      userId:
        type: string
    required:
    - fio
    - id
    - role
    - userId
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginResponse:
    properties:
      accessToken:
        type: string
      name:
        type: string
      refreshToken:
        type: string
      role:
        type: string
      userId:
        type: string
    type: object
  models.NameResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  models.PrescriptionForUpdate:
    properties:
      category:
        type: string
      course:
        type: string
      dose:
        type: number
      name:
        type: string
      option:
        type: string
      preparationId:
        type: integer
    required:
    - course
    - dose
    - name
    - preparationId
    type: object
  models.RefResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    required:
    - id
    - name
    - type
    type: object
  models.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    type: object
  models.RefreshTokenShort:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  models.Response:
    properties:
      code:
        type: integer
      description:
        type: string
      message:
        type: string
    type: object
  models.TreatmentDetail:
    properties:
      beginAt:
        type: string
      comment:
        type: string
      createdAt:
        type: string
      doctorId:
        type: string
      endAt:
        type: string
      id:
        type: integer
      isActive:
        type: integer
      patient:
        allOf:
        - $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.Patient'
        description: инфа пациента
      patientId:
        type: integer
      prescriptions:
        description: список лечения
        items:
          $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.Prescription'
        type: array
      status:
        type: string
      temperature:
        description: Температура тела животного, >= 0
        minimum: 0
        type: number
      updatedAt:
        type: string
      weight:
        description: Вес животного в кг, >= 0
        minimum: 0
        type: number
    required:
    - beginAt
    - comment
    - createdAt
    - doctorId
    - endAt
    - id
    - isActive
    - patientId
    - status
    - updatedAt
    type: object
  models.TreatmentSendForUser:
    properties:
      doctorId:
        type: string
      id:
        type: integer
    required:
    - doctorId
    - id
    type: object
  models.TreatmentUpdateToUser:
    properties:
      comment:
        type: string
      doctorId:
        type: string
      id:
        type: integer
      prescriptions:
        items:
          $ref: '#/definitions/models.PrescriptionForUpdate'
        minItems: 1
        type: array
      temperature:
        minimum: 0
        type: number
      weight:
        minimum: 0
        type: number
    required:
    - comment
    - doctorId
    - id
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Авторизация
      operationId: auth
      parameters:
      - description: Запрос
        in: body
        name: Form
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Авторизация
      tags:
      - auth
  /patient:
    post:
      consumes:
      - application/json
      description: Создать нового пациента
      operationId: create_patient
      parameters:
      - description: Запрос
        in: body
        name: Form
        required: true
        schema:
          $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Создать нового пациента
      tags:
      - patients
    put:
      consumes:
      - application/json
      description: Редактирование  пациента
      operationId: update_patient
      parameters:
      - description: Запрос
        in: body
        name: Form
        required: true
        schema:
          $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Редактирование  пациента
      tags:
      - patients
  /preparations:
    get:
      consumes:
      - application/json
      description: Получить список препаратов
      operationId: get_preparations
      produces:
      - application/json
      responses:
        "200":
          description: Список препаратов
          schema:
            items:
              $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.Preparations'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить список препаратов
      tags:
      - preparations
  /preparationsToSymptoms:
    get:
      consumes:
      - application/json
      description: Получить список препаратов по симптомам
      operationId: get_preparations_to_symptoms
      parameters:
      - description: список id симптомов
        in: query
        name: ids
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Список препаратов по симптомам
          schema:
            items:
              $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.PreparationsToSymptoms'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить список препаратов по симптомам
      tags:
      - preparations
  /reference:
    get:
      consumes:
      - application/json
      description: Получить список справочника
      operationId: get_reference
      parameters:
      - description: тип справочника
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список справочника
          schema:
            items:
              $ref: '#/definitions/models.RefResponse'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить список справочника
      tags:
      - reference
  /refreshToken:
    post:
      consumes:
      - application/json
      description: Обновление токена
      operationId: refreshToken
      parameters:
      - description: Запрос
        in: body
        name: Form
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/models.RefreshTokenShort'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Обновление токена
      tags:
      - auth
  /send_treatment:
    put:
      consumes:
      - application/json
      description: Назначить лечения на доктора
      operationId: treatment_send_on_user
      parameters:
      - description: Запрос
        in: body
        name: Form
        required: true
        schema:
          $ref: '#/definitions/models.TreatmentSendForUser'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Назначить лечения на доктора
      tags:
      - treatment
  /symptoms:
    get:
      consumes:
      - application/json
      description: Получить список симптомов
      operationId: get_symptoms
      produces:
      - application/json
      responses:
        "200":
          description: Список симптомов
          schema:
            items:
              $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.Symptoms'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить список симптомов
      tags:
      - symptoms
  /treatment:
    get:
      consumes:
      - application/json
      description: Возвращает детали  лечения для доктора
      operationId: get_treatment_for_user
      produces:
      - application/json
      responses:
        "200":
          description: Детали лечения
          schema:
            items:
              $ref: '#/definitions/models.TreatmentDetail'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить детали лечения для доктора
      tags:
      - treatment
    put:
      consumes:
      - application/json
      description: Обновление лечения
      operationId: update_treatment
      parameters:
      - description: Запрос
        in: body
        name: Form
        required: true
        schema:
          $ref: '#/definitions/models.TreatmentUpdateToUser'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Обновление лечения
      tags:
      - treatment
  /treatment/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает детали  лечения
      operationId: get_treatment
      parameters:
      - description: ID treatment
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Детали лечения
          schema:
            items:
              $ref: '#/definitions/models.TreatmentDetail'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить детали лечения
      tags:
      - treatment
  /treatments:
    get:
      consumes:
      - application/json
      description: Возвращает список всех лечений
      operationId: get_treatments
      parameters:
      - description: Фильтр по ФИО
        in: query
        name: fio
        type: string
      - description: Фильтр по кличке
        in: query
        name: name
        type: string
      - description: Фильтр по статусу
        in: query
        name: status
        type: string
      - description: Фильтр по дате создания
        in: query
        name: date
        type: string
      - description: Лимит записей (по умолчанию 10)
        in: query
        name: limit
        type: integer
      - description: Смещение для пагинации (по умолчанию 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список лечений
          schema:
            items:
              $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.Treatment'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить список лечений
      tags:
      - treatment
  /users:
    get:
      consumes:
      - application/json
      description: Получить список пользователей
      operationId: get_users
      parameters:
      - description: роль
        in: query
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список пользователей
          schema:
            items:
              $ref: '#/definitions/github_com_isaydiev86_doctor-vet-patients_transport_models.User'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить список пользователей
      tags:
      - users
swagger: "2.0"
